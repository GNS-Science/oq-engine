# -*- coding: utf-8 -*-
# vim: tabstop=4 shiftwidth=4 softtabstop=4
#
# Copyright (C) 2014-2021 GEM Foundation
#
# OpenQuake is free software: you can redistribute it and/or modify it
# under the terms of the GNU Affero General Public License as published
# by the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# OpenQuake is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU Affero General Public License for more details.
#
# You should have received a copy of the GNU Affero General Public License
# along with OpenQuake. If not, see <http://www.gnu.org/licenses/>.
"""
Module exports :class:`Ameri2014Rjb`
"""

import numpy as np
from openquake.hazardlib import const
from openquake.hazardlib.gsim.base import CoeffsTable
from openquake.hazardlib.gsim.ameri_2017 import AmeriEtAl2017Rjb


class Ameri2014Rjb(AmeriEtAl2017Rjb):
    """
    Implementation of Ameri (2014) - an early version of the Ameri et al. (2017)
    GMM published in:

    Ameri (2014) "Empirical Ground Motion Model Adapted to the French Context",
    Seismic Ground Motion Assessment (SIGMA) Deliverable SIGMA-2014-D2-131

    However, the model is adopted in favour of the Ameri et al. (2017) model within the
    2020 seismic hazard model of France published by Drouet et al. (2020):

    Drouet S, Ameri G, Le Dortz, K, Sevanell R, Senfaute G. (2020) "A probabilistic seismic
    hazard map for the metropolitan France", Bulletin of Earthquake Engineering, 18: 1865 -
    1898

    Adopts a homoskedastic standard deviation model.
    """
    def _get_stddevs(self, C_SIGMA, stddev_types, num_sites, mag):
        """
        Returns the homoskedastic standard deviation model
        """
        tau = C_SIGMA["sigmaB"] + np.zeros(num_sites)
        phi = C_SIGMA["sigmaW"] + np.zeros(num_sites)
        sigma = np.sqrt(tau ** 2 + phi ** 2)
        stddevs = []
        for stddev_type in stddev_types:
            assert stddev_type in self.DEFINED_FOR_STANDARD_DEVIATION_TYPES
            if stddev_type == const.StdDev.TOTAL:
                stddevs.append(sigma)
            elif stddev_type == const.StdDev.INTRA_EVENT:
                stddevs.append(phi)
            elif stddev_type == const.StdDev.INTER_EVENT:
                stddevs.append(tau)
        return stddevs

    #: Coefficients from xls file "coeff_AMERI2014_Rjb_generic.xls":
    COEFFS = CoeffsTable(sa_damping=5, table="""\
    imt             a           c1          c2           h           b1           b2     b3     e1          e2          e3          e4           f1           f2     f3
    pga     3.4299200   -1.4186000   0.2155010   6.9348200   -0.1344920   -0.1021380   0.00   0.00   0.1662230   0.2201900   0.2073030   -0.0259315    0.0575387   0.00
    0.010   3.4445000   -1.4249900   0.2181910   7.0431800   -0.1319270   -0.0983586   0.00   0.00   0.1609590   0.2139220   0.2046230   -0.0250589    0.0628565   0.00
    0.020   3.4780800   -1.4342900   0.2169050   6.8457100   -0.1211040   -0.0944366   0.00   0.00   0.1511240   0.2018620   0.2011810   -0.0211561    0.0650619   0.00
    0.030   3.5340800   -1.4724500   0.2327950   7.0594700   -0.1335990   -0.0846513   0.00   0.00   0.1344390   0.1799090   0.1822870   -0.0140633    0.0846879   0.00
    0.040   3.5845300   -1.4965000   0.2364990   7.0683300   -0.1410750   -0.0786815   0.00   0.00   0.1338950   0.1680250   0.1454330   -0.0085579    0.0868674   0.00
    0.050   3.6592600   -1.5159600   0.2257250   7.1327700   -0.1401910   -0.0795892   0.00   0.00   0.1372460   0.1604960   0.1270730   -0.0065000    0.0867504   0.00
    0.075   3.8433500   -1.5442900   0.1855380   7.3996300   -0.1322830   -0.0960448   0.00   0.00   0.1623400   0.1702940   0.1255480   -0.0137204    0.0725592   0.00
    0.100   3.9491600   -1.5521700   0.1589970   7.8753900   -0.1304940   -0.1137860   0.00   0.00   0.1977650   0.2014370   0.1558740   -0.0124134    0.0602458   0.00
    0.150   3.9690700   -1.4935600   0.1398220   7.8395000   -0.1230940   -0.1358840   0.00   0.00   0.2241600   0.2314580   0.2126800   -0.0229505    0.0324183   0.00
    0.200   3.8815600   -1.4021600   0.1295530   7.1482300   -0.0907246   -0.1459470   0.00   0.00   0.2155400   0.2565140   0.2432830   -0.0323343    0.0270226   0.00
    0.260   3.7621300   -1.3151300   0.1198170   6.4311000   -0.0411302   -0.1506240   0.00   0.00   0.2172770   0.2952000   0.2687630   -0.0390729    0.0133672   0.00
    0.300   3.6809100   -1.2603400   0.1131640   5.9062600   -0.0132164   -0.1543630   0.00   0.00   0.2066750   0.3094220   0.2870460   -0.0481329    0.0088210   0.00
    0.360   3.5548100   -1.1894500   0.1104210   5.2933300    0.0334797   -0.1522850   0.00   0.00   0.2112730   0.3385730   0.3324460   -0.0510757   -0.0059703   0.00
    0.400   3.4885400   -1.1623200   0.1119970   5.1330600    0.0530004   -0.1514720   0.00   0.00   0.2194750   0.3560050   0.3595690   -0.0536326   -0.0149397   0.00
    0.460   3.4207700   -1.1375300   0.1165370   4.9782100    0.0763429   -0.1497750   0.00   0.00   0.2199700   0.3761570   0.4020090   -0.0648424   -0.0315718   0.00
    0.500   3.3758300   -1.1137300   0.1160610   4.7366800    0.0996337   -0.1484540   0.00   0.00   0.2175090   0.3866420   0.4309080   -0.0721233   -0.0397411   0.00
    0.600   3.2676500   -1.0768700   0.1191360   4.4259300    0.1355550   -0.1469930   0.00   0.00   0.2165190   0.3998460   0.4989120   -0.0726062   -0.0517600   0.00
    0.700   3.1724200   -1.0534700   0.1199620   4.2476000    0.1504170   -0.1489880   0.00   0.00   0.2126620   0.4083170   0.5600450   -0.0752202   -0.0684885   0.00
    0.800   3.0660600   -1.0182000   0.1268360   3.9563300    0.1726660   -0.1464220   0.00   0.00   0.2032800   0.4128690   0.5960230   -0.0758408   -0.0794567   0.00
    0.900   2.9964500   -0.9942510   0.1280420   3.9208300    0.1979320   -0.1457170   0.00   0.00   0.1955140   0.4193100   0.6355290   -0.0792907   -0.0870377   0.00
    1.000   2.9350300   -0.9752740   0.1264460   3.8208500    0.2339080   -0.1415580   0.00   0.00   0.1966170   0.4212260   0.6486290   -0.0737010   -0.0878048   0.00
    1.300   2.7827900   -0.9400810   0.1392110   3.8020600    0.2942740   -0.1332020   0.00   0.00   0.1832300   0.4053710   0.6727040   -0.0754954   -0.0903559   0.00
    1.500   2.7402500   -0.9350050   0.1326680   3.8021500    0.3559020   -0.1261410   0.00   0.00   0.1809680   0.3976890   0.7102410   -0.0729895   -0.0783815   0.00
    1.800   2.6933600   -0.9415820   0.1345680   4.2154000    0.4141180   -0.1148970   0.00   0.00   0.1632190   0.3692440   0.6611440   -0.0791300   -0.0768855   0.00
    2.000   2.6643400   -0.9479680   0.1337100   4.4291100    0.4369840   -0.1139270   0.00   0.00   0.1558270   0.3645580   0.6458130   -0.0888361   -0.0845512   0.00
    2.600   2.5117100   -0.9447250   0.1570700   4.6118900    0.4858550   -0.0985749   0.00   0.00   0.1209170   0.3188600   0.5885730   -0.0735028   -0.0659589   0.00
    3.000   2.4565500   -0.9442740   0.1724760   5.1844600    0.5461080   -0.0768508   0.00   0.00   0.1099650   0.3089590   0.5937220   -0.0879513   -0.0845897   0.00
    """)

    # Homoskedastic sigma model
    COEFFS_SIGMA = CoeffsTable(sa_damping=5, table="""\
    imt        sigmaB      sigmaW      sigmaT
    pga     0.2269060   0.3025410   0.3781770
    0.010   0.2286200   0.3048270   0.3810330
    0.020   0.2300070   0.3066760   0.3833450
    0.030   0.2335220   0.3182370   0.3947250
    0.040   0.2402440   0.3273970   0.4060860
    0.050   0.2476110   0.3301480   0.4126840
    0.075   0.2553120   0.3261180   0.4141700
    0.100   0.2455130   0.3203650   0.4036210
    0.150   0.2342130   0.3122840   0.3903550
    0.200   0.2240930   0.2987910   0.3734880
    0.260   0.2050650   0.2921950   0.3569730
    0.300   0.1996860   0.2910900   0.3529980
    0.360   0.1967460   0.2935280   0.3533660
    0.400   0.1901640   0.2975480   0.3531250
    0.460   0.1875050   0.3006780   0.3543520
    0.500   0.1875000   0.3006690   0.3543420
    0.600   0.1863500   0.2988250   0.3521690
    0.700   0.1882750   0.3019110   0.3558050
    0.800   0.1879880   0.3014520   0.3552650
    0.900   0.1816910   0.2987540   0.3496650
    1.000   0.1804730   0.2967510   0.3473210
    1.300   0.1921380   0.2934950   0.3507940
    1.500   0.1878810   0.2939760   0.3488860
    1.800   0.1888490   0.2954910   0.3506840
    2.000   0.1894050   0.2963620   0.3517170
    2.600   0.2007940   0.2927050   0.3549570
    3.000   0.2076440   0.2829710   0.3509820
    """)
